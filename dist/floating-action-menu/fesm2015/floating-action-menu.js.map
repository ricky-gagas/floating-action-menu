{"version":3,"file":"floating-action-menu.js.map","sources":["ng://floating-action-menu/lib/floating-action-menu.component.ts","ng://floating-action-menu/lib/FloatingActionButton.ts","ng://floating-action-menu/lib/floating-action-button/floating-action-button.component.ts","ng://floating-action-menu/lib/floating-action-menu.module.ts"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { FloatingActionButton } from './FloatingActionButton';\n\n@Component({\n  selector: 'ng2-floating-action-menu',\n  template: `\n    <ul\n      mfb-menu\n      class=\"mfb-component--{{ placement }} {{ effect }}\"\n      [attr.data-mfb-state]=\"state\"\n      [attr.toggling-method]=\"toggle\"\n      [attr.data-mfb-toggle]=\"toggle\"\n    >\n      <li class=\"mfb-component__wrap\">\n        <a\n          class=\"mfb-component__button--main\"\n          [attr.data-mfb-label]=\"label\"\n          (click)=\"clicked()\"\n          (mouseenter)=\"entered()\"\n          (mouseleave)=\"leaved()\"\n        >\n          <!-- the main button icon visibile by default -->\n          <i class=\"mfb-component__main-icon--resting {{ iconClass }}\"></i>\n          <!-- the main button icon visibile when the user is hovering/interacting with the menu -->\n          <i class=\"mfb-component__main-icon--active {{ activeIconClass }}\"></i>\n        </a>\n\n        <ul class=\"mfb-component__list\">\n          <!-- a child button, repeat as many times as needed -->\n          <li *ngFor=\"let button of buttons\">\n            <ng2-floating-action-button\n              [button]=\"button\"\n            ></ng2-floating-action-button>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  `,\n  styleUrls: ['./floating-action-menu.component.scss']\n})\nexport class FloatingActionMenuComponent implements OnInit {\n  public isOpen = false;\n  public state = 'closed';\n\n  @Input() placement: string;\n  @Input() effect: string;\n  @Input() label: string;\n  @Input() iconClass: string;\n  @Input() activeIconClass: string;\n  @Input() toggle = 'click';\n  @Input() buttons: Array<FloatingActionButton>;\n\n  constructor() {}\n\n  clicked() {\n    if (this.toggle !== 'click') {\n      return false;\n    }\n    this.isOpen = !this.isOpen;\n    if (this.isOpen) {\n      this.state = 'open';\n    } else {\n      this.state = 'closed';\n    }\n  }\n\n  entered() {\n    if (this.toggle !== 'hover') {\n      return false;\n    }\n    this.state = 'open';\n  }\n\n  leaved() {\n    if (this.toggle !== 'hover') {\n      return false;\n    }\n    this.state = 'closed';\n  }\n\n  ngOnInit() {}\n}\n","export class FloatingActionButton {\n  iconClass: string;\n  label?: string;\n  onClick: () => void;\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FloatingActionButton } from '../FloatingActionButton';\n\n@Component({\n  selector: 'ng2-floating-action-button',\n  template: `\n    <a\n      href\n      [attr.data-mfb-label]=\"button.label\"\n      (click)=\"buttonClick()\"\n      class=\"mfb-component__button--child\"\n    >\n      <i class=\"mfb-component__child-icon {{ button.iconClass }}\"></i>\n    </a>\n  `,\n  styleUrls: ['./floating-action-button.component.css']\n})\nexport class FloatingActionButtonComponent implements OnInit {\n  @Input() button: FloatingActionButton;\n\n  constructor() {}\n\n  buttonClick() {\n    this.button.onClick();\n    return false;\n  }\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { FloatingActionMenuComponent } from './floating-action-menu.component';\nimport { FloatingActionButtonComponent } from './floating-action-button/floating-action-button.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [FloatingActionMenuComponent, FloatingActionButtonComponent],\n  imports: [CommonModule],\n  exports: [FloatingActionMenuComponent, FloatingActionButtonComponent]\n})\nexport class FloatingActionMenuModule {}\n"],"names":[],"mappings":";;;;;;;AAAA,MAwCa,2BAA2B;IAYtC;QAXO,WAAM,GAAG,KAAK,CAAC;QACf,UAAK,GAAG,QAAQ,CAAC;QAOf,WAAM,GAAG,OAAO,CAAC;KAGV;;;;IAEhB,OAAO;QACL,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,EAAE;YAC3B,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;SACvB;KACF;;;;IAED,OAAO;QACL,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,EAAE;YAC3B,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;KACrB;;;;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,EAAE;YAC3B,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;KACvB;;;;IAED,QAAQ,MAAK;;;YA7Ed,SAAS,SAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCT;;aAEF;;;;;wBAKE,KAAK;qBACL,KAAK;oBACL,KAAK;wBACL,KAAK;8BACL,KAAK;qBACL,KAAK;sBACL,KAAK;;;;;;;AClDR,MAAa,oBAAoB;CAIhC;;;;;;ACJD,MAiBa,6BAA6B;IAGxC,iBAAgB;;;;IAEhB,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACtB,OAAO,KAAK,CAAC;KACd;;;;IAED,QAAQ,MAAK;;;YAxBd,SAAS,SAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,QAAQ,EAAE;;;;;;;;;GAST;;aAEF;;;;;qBAEE,KAAK;;;;;;;AClBR,MAUa,wBAAwB;;;YALpC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,2BAA2B,EAAE,6BAA6B,CAAC;gBAC1E,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,2BAA2B,EAAE,6BAA6B,CAAC;aACtE;;;;;;;;;;;;;;;"}
